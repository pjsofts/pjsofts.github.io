{"pageProps":{"post":{"attributes":{"title":"Values and Data Types","description":"Javascript Basic Datatypes"},"html":"<p>In JavaScript, variables are used to store data values. Each variable has a name, which is used to reference the stored value, and a data type, which defines the type of data that the variable can hold. JavaScript supports several data types, each with its own characteristics and uses. </p>\n<p>Let&#39;s go through some common data types with code examples:</p>\n<ol>\n<li><strong>Numbers</strong>: Used for storing numeric values.</li>\n</ol>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">var</span> age = <span class=\"hljs-number\">25</span>; <span class=\"hljs-comment\">// Integer</span>\n<span class=\"hljs-keyword\">var</span> price = <span class=\"hljs-number\">99.99</span>; <span class=\"hljs-comment\">// Floating-point number</span>\n</code></pre>\n<ol start=\"2\">\n<li><strong>Strings</strong>: Used for storing text.</li>\n</ol>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">var</span> name = <span class=\"hljs-string\">&quot;John&quot;</span>; <span class=\"hljs-comment\">// Double or single quotes can be used</span>\n<span class=\"hljs-keyword\">var</span> message = <span class=\"hljs-string\">&#x27;Hello, world!&#x27;</span>;\n</code></pre>\n<ol start=\"3\">\n<li><strong>Booleans</strong>: Used for storing true or false values.</li>\n</ol>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">var</span> isLogged = <span class=\"hljs-literal\">true</span>;\n<span class=\"hljs-keyword\">var</span> hasPermission = <span class=\"hljs-literal\">false</span>;\n</code></pre>\n<ol start=\"4\">\n<li><strong>Null</strong>: Represents the intentional absence of any value.</li>\n</ol>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">var</span> myVar = <span class=\"hljs-literal\">null</span>;\n</code></pre>\n<ol start=\"5\">\n<li><strong>Undefined</strong>: Represents an uninitialized variable or a missing value.</li>\n</ol>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">var</span> myVar;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(myVar); <span class=\"hljs-comment\">// Outputs: undefined</span>\n</code></pre>\n<ol start=\"6\">\n<li><strong>Objects</strong>: Used for storing collections of key-value pairs.</li>\n</ol>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">var</span> person = {\n    <span class=\"hljs-attr\">firstName</span>: <span class=\"hljs-string\">&quot;Alice&quot;</span>,\n    <span class=\"hljs-attr\">lastName</span>: <span class=\"hljs-string\">&quot;Johnson&quot;</span>,\n    <span class=\"hljs-attr\">age</span>: <span class=\"hljs-number\">30</span>\n};\n</code></pre>\n<ol start=\"7\">\n<li><strong>Arrays</strong>: Used for storing ordered collections of values.</li>\n</ol>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">var</span> colors = [<span class=\"hljs-string\">&quot;red&quot;</span>, <span class=\"hljs-string\">&quot;green&quot;</span>, <span class=\"hljs-string\">&quot;blue&quot;</span>];\n</code></pre>\n<ol start=\"8\">\n<li><strong>Functions</strong>: Used for storing reusable blocks of code.</li>\n</ol>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">add</span>(<span class=\"hljs-params\">a, b</span>) {\n    <span class=\"hljs-keyword\">return</span> a + b;\n}\n</code></pre>\n<ol start=\"9\">\n<li><strong>Symbols</strong> (ES6): Used to create unique identifiers.</li>\n</ol>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">var</span> id = <span class=\"hljs-title class_\">Symbol</span>(<span class=\"hljs-string\">&quot;uniqueID&quot;</span>);\n</code></pre>\n<ol start=\"10\">\n<li><strong>BigInt</strong> (ES11): Used for working with large integers.</li>\n</ol>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">var</span> bigValue = <span class=\"hljs-number\">1234567890123456789012345678901234567890n</span>;\n</code></pre>\n<p>Now, let&#39;s see some variable examples:</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-comment\">// Variable declaration and assignment</span>\n<span class=\"hljs-keyword\">var</span> age = <span class=\"hljs-number\">30</span>;\n<span class=\"hljs-keyword\">var</span> name = <span class=\"hljs-string\">&quot;Alice&quot;</span>;\n<span class=\"hljs-keyword\">var</span> isLoggedIn = <span class=\"hljs-literal\">true</span>;\n\n<span class=\"hljs-comment\">// Variable reassignment</span>\nage = <span class=\"hljs-number\">31</span>;\nname = <span class=\"hljs-string\">&quot;Bob&quot;</span>;\nisLoggedIn = <span class=\"hljs-literal\">false</span>;\n\n<span class=\"hljs-comment\">// Using variables in expressions</span>\n<span class=\"hljs-keyword\">var</span> total = age + <span class=\"hljs-number\">10</span>;\n<span class=\"hljs-keyword\">var</span> greeting = <span class=\"hljs-string\">&quot;Hello, &quot;</span> + name + <span class=\"hljs-string\">&quot;!&quot;</span>;\n</code></pre>\n","markdown":"In JavaScript, variables are used to store data values. Each variable has a name, which is used to reference the stored value, and a data type, which defines the type of data that the variable can hold. JavaScript supports several data types, each with its own characteristics and uses. \n\nLet's go through some common data types with code examples:\n\n\n1. **Numbers**: Used for storing numeric values.\n\n```javascript\nvar age = 25; // Integer\nvar price = 99.99; // Floating-point number\n```\n\n2. **Strings**: Used for storing text.\n\n```javascript\nvar name = \"John\"; // Double or single quotes can be used\nvar message = 'Hello, world!';\n```\n\n3. **Booleans**: Used for storing true or false values.\n\n```javascript\nvar isLogged = true;\nvar hasPermission = false;\n```\n\n4. **Null**: Represents the intentional absence of any value.\n\n```javascript\nvar myVar = null;\n```\n\n5. **Undefined**: Represents an uninitialized variable or a missing value.\n\n```javascript\nvar myVar;\nconsole.log(myVar); // Outputs: undefined\n```\n\n6. **Objects**: Used for storing collections of key-value pairs.\n\n```javascript\nvar person = {\n    firstName: \"Alice\",\n    lastName: \"Johnson\",\n    age: 30\n};\n```\n\n7. **Arrays**: Used for storing ordered collections of values.\n\n```javascript\nvar colors = [\"red\", \"green\", \"blue\"];\n```\n\n8. **Functions**: Used for storing reusable blocks of code.\n\n```javascript\nfunction add(a, b) {\n    return a + b;\n}\n```\n\n9. **Symbols** (ES6): Used to create unique identifiers.\n\n```javascript\nvar id = Symbol(\"uniqueID\");\n```\n\n10. **BigInt** (ES11): Used for working with large integers.\n\n```javascript\nvar bigValue = 1234567890123456789012345678901234567890n;\n```\n\nNow, let's see some variable examples:\n\n```javascript\n// Variable declaration and assignment\nvar age = 30;\nvar name = \"Alice\";\nvar isLoggedIn = true;\n\n// Variable reassignment\nage = 31;\nname = \"Bob\";\nisLoggedIn = false;\n\n// Using variables in expressions\nvar total = age + 10;\nvar greeting = \"Hello, \" + name + \"!\";\n```\n\n","slug":"Values_and_datatypes","title":"Values and Data Types","section":"Values and Data Types","icon":"file-code","filePath":"/home/runner/work/pjsofts.github.io/pjsofts.github.io/lessons/03-values_and_data_types/A-Values_and_datatypes.md","nextSlug":null,"prevSlug":"/lessons/DOM/DOM-exercises"}},"__N_SSG":true}